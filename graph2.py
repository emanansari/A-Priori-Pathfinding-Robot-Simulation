import networkx as nx
import matplotlib.pyplot as plt  # Optional for visualization

# this file maps layout 2 nodes to their coordinates on the webots simulation 


graph = {'F_1': [('AE_1', 14), ('F_2', 30)], 'H_1': [('AF_1', 25)], 'K_1': [('AN_1', 15)], 'L_1': [('AL_1', 12), ('L_2', 30), ('N_2', 84)], 'N_1': [('AN_1', 12), ('N_2', 30)], 'AE_1': [('AG_1', 22), ('F_1', 14)], 'AF_1': [('AI_1', 22), ('H_1', 25), ('AF_2', 30)], 'AG_1': [('AE_1', 22), ('AJ_1', 21)], 'AI_1': [('AF_1', 22), ('AN_1', 47), ('AI_2', 30)], 'AJ_1': [('AG_1', 21), ('AL_1', 26)], 'AL_1': [('AJ_1', 26), ('L_1', 12)], 'AN_1': [('AI_1', 47), ('N_1', 12), ('K_1', 15), ('AN_2', 30)], 'E_2': [('AG_2', 32)], 'F_2': [('AE_2', 14), ('F_1', 30)], 'G_2': [('AF_2', 14)], 'L_2': [('AL_2', 12), ('L_1', 30)], 'M_2': [('AM_2', 12)], 'N_2': [('AN_2', 12), ('N_1', 30), ('L_1', 84)], 'AE_2': [('AG_2', 22), ('F_2', 14)], 'AF_2': [('AI_2', 22), ('G_2', 14), ('AF_1', 30)], 'AG_2': [('AE_2', 22), ('AH_2', 68), ('AJ_2', 21), ('E_2', 32)], 'AH_2': [('AG_2', 68), ('AK_2', 21), ('AI_2', 84)], 'AI_2': [('AF_2', 22), ('AH_2', 84), ('AN_2', 47), ('AI_1', 30)], 'AJ_2': [('AG_2', 21), ('AL_2', 26)], 'AK_2': [('AH_2', 21), ('AM_2', 26)], 'AL_2': [('AJ_2', 26), ('AM_2', 68), ('L_2', 12)], 'AM_2': [('AK_2', 26), ('AL_2', 68), ('AN_2', 84), ('M_2', 12)], 'AN_2': [('AI_2', 47), ('AM_2', 84), ('N_2', 12), ('AN_1', 30)]}
coordinates = {'F_1': [0.25110994199120207, 0.64235539593765, 0.04853610061240178], 'H_1': [0.25110994199120207, -0.9872393772263438, 0.04853610061240178], 'K_1': [-0.4388255510037137, -0.8852003817695542, 0.04853610061240178], 'L_1': [-0.5595907093102195, 0.7805592126409339, 0.04853610061240178], 'N_1': [-0.5595907093102195, -0.738861358107975, 0.04853610061240178], 'AE_1': [0.25110994199120207, 0.7805592126409339, 0.04853610061240178], 'AF_1': [0.25110994199120207, -0.738861358107975, 0.04853610061240178], 'AG_1': [0.03126182671058787, 0.7805592126409339, 0.04853610061240178], 'AI_1': [0.03126182671058787, -0.738861358107975, 0.04853610061240178], 'AJ_1': [-0.17889000655709533, 0.7805592126409339, 0.04853610061240178], 'AL_1': [-0.4388255510037137, 0.7805592126409339, 0.04853610061240178], 'AN_1': [-0.4388255510037137, -0.738861358107975, 0.04853610061240178], 'E_2': [0.03126182671058787, 2.102539611090158, 0.04853610061240178], 'F_2': [0.25110994199120207, 1.64235539593765, 0.04853610061240178], 'G_2': [0.25110994199120207, 0.4024020803157515, 0.04853610061240178], 'L_2': [-0.5595907093102195, 1.780559212640934, 0.04853610061240178], 'M_2': [-0.5595907093102195, 1.1036538583316702, 0.04853610061240178], 'N_2': [-0.5595907093102195, 0.261138641892025, 0.04853610061240178], 'AE_2': [0.25110994199120207, 1.780559212640934, 0.04853610061240178], 'AF_2': [0.25110994199120207, 0.261138641892025, 0.04853610061240178], 'AG_2': [0.03126182671058787, 1.780559212640934, 0.04853610061240178], 'AH_2': [0.03126182671058787, 1.1036538583316702, 0.04853610061240178], 'AI_2': [0.03126182671058787, 0.261138641892025, 0.04853610061240178], 'AJ_2': [-0.17889000655709533, 1.780559212640934, 0.04853610061240178], 'AK_2': [-0.17889000655709533, 1.1036538583316702, 0.04853610061240178], 'AL_2': [-0.4388255510037137, 1.780559212640934, 0.04853610061240178], 'AM_2': [-0.4388255510037137, 1.1036538583316702, 0.04853610061240178], 'AN_2': [-0.4388255510037137, 0.261138641892025, 0.04853610061240178]}

# Create an empty graph
G = nx.Graph()

# Add nodes with coordinates to the graph
for node, coord in coordinates.items():
    G.add_node(node, pos=(coord[0], coord[1]))

# Add edges with weights to the graph
for node, edges in graph.items():
    for edge in edges:
        neighbor = edge[0]
        weight = edge[1]
        G.add_edge(node, neighbor, weight=weight)

# Optional: Visualize the graph with adjusted font size
plt.figure(figsize=(8, 6))
pos = nx.get_node_attributes(G, 'pos')
nx.draw(G, pos, with_labels=True, node_size=400, font_size=7, font_color='black', font_weight='bold')
labels = nx.get_edge_attributes(G, 'weight')
nx.draw_networkx_edge_labels(G, pos, edge_labels=labels, font_size=7)  # Adjusted font size for edge labels
plt.show()