import networkx as nx
import matplotlib.pyplot as plt  # Optional for visualization

# this file maps layout 3 nodes to their coordinates on the webots simulation 

graph = {'A_1': [('AA_1', 10), ('A_2', 10)], 'B_1': [('AB_1', 10), ('B_2', 10)], 'C_1': [('AC_1', 24), ('C_2', 10)], 'D_1': [('AD_1', 24), ('D_2', 10)], 'E_1': [('AG_1', 32), ('E_2', 10)], 'F_1': [('AE_1', 14), ('F_2', 10)], 'G_1': [('AF_1', 14), ('G_2', 10)], 'H_1': [('AF_1', 25), ('H_2', 10)], 'I_1': [('AJ_1', 15), ('I_2', 10)], 'J_1': [('AK_1', 19), ('J_2', 10)], 'K_1': [('AN_1', 15), ('K_2', 10)], 'L_1': [('AL_1', 12), ('L_2', 10)], 'M_1': [('AM_1', 12), ('M_2', 10)], 'N_1': [('AN_1', 12), ('N_2', 10)], 'AA_1': [('A_1', 10), ('AB_1', 34), ('AE_1', 21), ('AA_2', 10)], 'AB_1': [('AA_1', 34), ('AC_1', 34), ('B_1', 10)], 'AC_1': [('AB_1', 34), ('AD_1', 84), ('AH_1', 43), ('C_1', 24)], 'AD_1': [('AC_1', 84), ('AF_1', 21), ('D_1', 24)], 'AE_1': [('AA_1', 21), ('AG_1', 22), ('F_1', 14)], 'AF_1': [('AD_1', 21), ('AI_1', 22), ('G_1', 14), ('H_1', 25)], 'AG_1': [('AE_1', 22), ('AH_1', 68), ('AJ_1', 21), ('E_1', 32)], 'AH_1': [('AC_1', 43), ('AG_1', 68), ('AK_1', 21), ('AI_1', 84)], 'AI_1': [('AF_1', 22), ('AH_1', 84), ('AN_1', 47)], 'AJ_1': [('AG_1', 21), ('AL_1', 26), ('I_1', 15)], 'AK_1': [('AH_1', 21), ('AM_1', 26), ('J_1', 19)], 'AL_1': [('AJ_1', 26), ('AM_1', 68), ('L_1', 12)], 'AM_1': [('AK_1', 26), ('AL_1', 68), ('AN_1', 84), ('M_1', 12)], 'AN_1': [('AI_1', 47), ('AM_1', 84), ('N_1', 12), ('K_1', 15)], 'A_2': [('AA_2', 10), ('A_1', 10)], 'B_2': [('AB_2', 10), ('B_1', 10)], 'C_2': [('AC_2', 24), ('C_1', 10)], 'D_2': [('AD_2', 24), ('D_1', 10)], 'E_2': [('AG_2', 32), ('E_1', 10)], 'F_2': [('AE_2', 14), ('F_1', 10)], 'G_2': [('AF_2', 14), ('G_1', 10)], 'H_2': [('AF_2', 25), ('H_1', 10)], 'I_2': [('AJ_2', 15), ('I_1', 10)], 'J_2': [('AK_2', 19), ('J_1', 10)], 'K_2': [('AN_2', 15), ('K_1', 10)], 'L_2': [('AL_2', 12), ('L_1', 10)], 'M_2': [('AM_2', 12), ('M_1', 10)], 'N_2': [('AN_2', 12), ('N_1', 10)], 'AA_2': [('A_2', 10), ('AB_2', 34), ('AE_2', 21), ('AA_1', 10)], 'AB_2': [('AA_2', 34), ('AC_2', 34), ('B_2', 10)], 'AC_2': [('AB_2', 34), ('AD_2', 84), ('AH_2', 43), ('C_2', 24)], 'AD_2': [('AC_2', 84), ('AF_2', 21), ('D_2', 24)], 'AE_2': [('AA_2', 21), ('AG_2', 22), ('F_2', 14)], 'AF_2': [('AD_2', 21), ('AI_2', 22), ('G_2', 14), ('H_2', 25)], 'AG_2': [('AE_2', 22), ('AH_2', 68), ('AJ_2', 21), ('E_2', 32)], 'AH_2': [('AC_2', 43), ('AG_2', 68), ('AK_2', 21), ('AI_2', 84)], 'AI_2': [('AF_2', 22), ('AH_2', 84), ('AN_2', 47)], 'AJ_2': [('AG_2', 21), ('AL_2', 26), ('I_2', 15)], 'AK_2': [('AH_2', 21), ('AM_2', 26), ('J_2', 19)], 'AL_2': [('AJ_2', 26), ('AM_2', 68), ('L_2', 12)], 'AM_2': [('AK_2', 26), ('AL_2', 68), ('AN_2', 84), ('M_2', 12)], 'AN_2': [('AI_2', 47), ('AM_2', 84), ('N_2', 12), ('K_2', 15)]}
coordinates = {
    'A_1': [0.5597847533284892, 0.7805592126409339, 0.04853610061240178],
    'B_1': [0.5597847533284892, 0.44087441460550786, 0.04853610061240178],
    'C_1': [0.6989737559164702, 0.10365385833167022, 0.04853610061240178],
    'D_1': [0.6989737559164702, -0.738861358107975, 0.04853610061240178],
    'E_1': [0.03126182671058787, 1.102539611090158, 0.04853610061240178],
    'F_1': [0.25110994199120207, 0.64235539593765, 0.04853610061240178],
    'G_1': [0.25110994199120207, -0.5975979196842485, 0.04853610061240178],
    'H_1': [0.25110994199120207, -0.9872393772263438, 0.04853610061240178],
    'I_1': [-0.17889000655709533, 0.6338164696592195, 0.04853610061240178],
    'J_1': [-0.17889000655709533, -0.0859521525366429, 0.04853610061240178],
    'K_1': [-0.4388255510037137, -0.8852003817695542, 0.04853610061240178],
    'L_1': [-0.5595907093102195, 0.7805592126409339, 0.04853610061240178],
    'M_1': [-0.5595907093102195, 0.10365385833167022, 0.04853610061240178],
    'N_1': [-0.5595907093102195, -0.738861358107975, 0.04853610061240178],
    'AA_1': [0.4610989066500465, 0.7805592126409339, 0.04853610061240178],
    'AB_1': [0.4610989066500465, 0.44087441460550786, 0.04853610061240178],
    'AC_1': [0.4610989066500465, 0.10365385833167022, 0.04853610061240178],
    'AD_1': [0.4610989066500465, -0.738861358107975, 0.04853610061240178],
    'AE_1': [0.25110994199120207, 0.7805592126409339, 0.04853610061240178],
    'AF_1': [0.25110994199120207, -0.738861358107975, 0.04853610061240178],
    'AG_1': [0.03126182671058787, 0.7805592126409339, 0.04853610061240178],
    'AH_1': [0.03126182671058787, 0.10365385833167022, 0.04853610061240178],
    'AI_1': [0.03126182671058787, -0.738861358107975, 0.04853610061240178],
    'AJ_1': [-0.17889000655709533, 0.7805592126409339, 0.04853610061240178],
    'AK_1': [-0.17889000655709533, 0.10365385833167022, 0.04853610061240178],
    'AL_1': [-0.4388255510037137, 0.7805592126409339, 0.04853610061240178],
    'AM_1': [-0.4388255510037137, 0.10365385833167022, 0.04853610061240178],
    'AN_1': [-0.4388255510037137, -0.738861358107975, 0.04853610061240178],
    'A_2': [0.5597847533284892, 1.780559212640934, 0.04853610061240178],
    'B_2': [0.5597847533284892, 1.4408744146055078, 0.04853610061240178],
    'C_2': [0.6989737559164702, 1.1036538583316702, 0.04853610061240178],
    'D_2': [0.6989737559164702, 0.261138641892025, 0.04853610061240178],
    'E_2': [0.03126182671058787, 2.102539611090158, 0.04853610061240178],
    'F_2': [0.25110994199120207, 1.64235539593765, 0.04853610061240178],
    'G_2': [0.25110994199120207, 0.4024020803157515, 0.04853610061240178],
    'H_2': [0.25110994199120207, 0.01276062277365623, 0.04853610061240178],
    'I_2': [-0.17889000655709533, 1.6338164696592195, 0.04853610061240178],
    'J_2': [-0.17889000655709533, 0.9140478474633571, 0.04853610061240178],
    'K_2': [-0.4388255510037137, 0.11479961823044581, 0.04853610061240178],
    'L_2': [-0.5595907093102195, 1.780559212640934, 0.04853610061240178],
    'M_2': [-0.5595907093102195, 1.1036538583316702, 0.04853610061240178],
    'N_2': [-0.5595907093102195, 0.261138641892025, 0.04853610061240178],
    'AA_2': [0.4610989066500465, 1.780559212640934, 0.04853610061240178],
    'AB_2': [0.4610989066500465, 1.4408744146055078, 0.04853610061240178],
    'AC_2': [0.4610989066500465, 1.1036538583316702, 0.04853610061240178],
    'AD_2': [0.4610989066500465, 0.261138641892025, 0.04853610061240178],
    'AE_2': [0.25110994199120207, 1.780559212640934, 0.04853610061240178],
    'AF_2': [0.25110994199120207, 0.261138641892025, 0.04853610061240178],
    'AG_2': [0.03126182671058787, 1.780559212640934, 0.04853610061240178],
    'AH_2': [0.03126182671058787, 1.1036538583316702, 0.04853610061240178],
    'AI_2': [0.03126182671058787, 0.261138641892025, 0.04853610061240178],
    'AJ_2': [-0.17889000655709533, 1.780559212640934, 0.04853610061240178],
    'AK_2': [-0.17889000655709533, 1.1036538583316702, 0.04853610061240178],
    'AL_2': [-0.4388255510037137, 1.780559212640934, 0.04853610061240178],
    'AM_2': [-0.4388255510037137, 1.1036538583316702, 0.04853610061240178],
    'AN_2': [-0.4388255510037137, 0.261138641892025, 0.04853610061240178]
}




# Create an empty graph
G = nx.Graph()

# Add nodes with coordinates to the graph
for node, coord in coordinates.items():
    G.add_node(node, pos=(coord[0], coord[1]))

# Add edges with weights to the graph
for node, edges in graph.items():
    for edge in edges:
        neighbor = edge[0]
        weight = edge[1]
        G.add_edge(node, neighbor, weight=weight)

# Optional: Visualize the graph with adjusted font size
plt.figure(figsize=(8, 6))
pos = nx.get_node_attributes(G, 'pos')
nx.draw(G, pos, with_labels=True, node_size=400, font_size=7, font_color='brown', font_weight='bold')
labels = nx.get_edge_attributes(G, 'weight')
nx.draw_networkx_edge_labels(G, pos, edge_labels=labels, font_size=7)  # Adjusted font size for edge labels
plt.show()